
-------------------------------------------------------------------------------- 
-- createInstallAPEX_ENTW.cmd

@echo off
setlocal enabledelayedexpansion
:: Setting Script Variables
set NLS_LANG=GERMAN_GERMANY.UTF8
chcp 65001>nul
:: needed for SQLcl
set JAVA_HOME=C:\app\client\product\23.3.0\sqlcl\jdk-21.0.1\bin
:: SQLcl Environment
set SQL_HOME=C:\app\client\product\23.3.0\sqlcl\bin\
set SQL_BIN=%SQL_HOME%\sql.exe
:: SQL*Plus Environment
set SQLPLUS_HOME=C:\app\client\product\19.0.0\client_1\bin
set SQLPLUS=sqlplus.exe
:: Set SQL Command Shell
set SQLC=%SQL_HOME%\%SQL_BIN%
set SQLP=%SQLPLUS_HOME%\%SQLPLUS%
:: Run Environment for SQL
set "RUN_USR=APEX_WWS"
set "RUN_ENV=ENTW.ESSEN.DEICHMANN.COM:1521/ENTW"

:: Workspace ID
set "WS_ID=19100357841544529"
set "SWS_FILES=installApexStaticWorkspaceFiles.sql"

:: Script Header and Main Directory
set "PWD=..SCRPIS\CMD\"
set "MAIN_PATH=C:\GIT\APEX\ENTW\WWS\APEX"

@REM Export Path
set "EXP_PATH=%MAIN_PATH%\COMPLETE_EXPORTS"

@REM Sript Path
set "SCR_PATH=%MAIN_PATH%\SCRIPTS"
set "CMD_DIR=%SCR_PATH%\CMD"

set "APP_LOG=%MAIN_PATH%\SCRIPTS\TMP\ENTW_Apex_App_Export.log"
set "SQL_WRAPPER_SQL=_installApex_WWS_ENTW.sql"
set "SQL_WRAPPER=%MAIN_PATH%\SCRIPTS\%SQL_WRAPPER_SQL%"

set "_LINE=--------------------------------------------------------------------------------"

:: Reset Path
set PATH=.;%SQL_HOME%;%JAVA_HOME%;%PATH%

:: goto Script Directory
pushd %SCR_PATH%

if exist %APP_LOG% (del /q %APP_LOG% >nul)

:: generate app list by curently deployed applications in workspace on environment
:: you will be prompted for the dbusers password on RUN_ENV
%SQLPLUS% -s /nolog @%SCR_PATH%\_installApex_WWS_GenerateAppList.sql %RUN_USR% %RUN_ENV%
if %ERRORLEVEL% GTR 0 set "_RC=%ERRORLEVEL%" && goto:_error "generate app list"
@echo %DATE% %TIME:~0,8% [%ERRORLEVEL%] Done...

:: cleaning previous install files
@echo.
@echo %DATE% %TIME:~0,8% *** Cleaning previous installAPEX files ***
@echo.

for /f "tokens=1* delims==" %%a in ('dir /b %SCR_PATH%\installApex_*.sql') do (
    @echo %DATE% %TIME:~0,8% removing: %%a
    del /q %%a >nul
    )
if %ERRORLEVEL% GTR 0 set "_RC=%ERRORLEVEL%" && goto:_error "cleaning previous install files"

:: create install files
@echo.
@echo %DATE% %TIME:~0,8% *** Creating installAPEX files ***
@echo.
for /f "tokens=1* delims==" %%a in ('type %APP_LOG%') do (
    set APP=%%a
    set APP_ID=%%a
    set IS_WC=!APP:~0,2!
    if ["!IS_WC!"] == ["WC"] set APP_ID=!APP:~2!
    @echo %DATE% %TIME:~0,8% calling: makeInstallFiles.cmd  _installApex_APP_ID.sql  installApex_!APP_ID!.sql !APP_ID!
    cmd /c %CMD_DIR%\makeInstallFiles.cmd %SCR_PATH%\_installApex_WWS_#APP_ID#.sql %SCR_PATH%\installApex_#APP#.sql %%a
    )
if %ERRORLEVEL% GTR 0 set "_RC=%ERRORLEVEL%" && goto:_error "create install files"

:: remove wrapper script
@echo.
@echo %DATE% %TIME:~0,8% *** Recreating %SQL_WRAPPER% ***
@echo.
if exist %SQL_WRAPPER% (del /q %SQL_WRAPPER% >nul)
if %ERRORLEVEL% GTR 0 set "_RC=%ERRORLEVEL%" && goto:_error "remove wrapper script"

:: create wrapper script
@echo %_LINE%>%SQL_WRAPPER%
@echo -- Apex Load Applications for ENTW from GIT Export>>%SQL_WRAPPER%
@echo -- generated by: %USERNAME% on: %DATE% %TIME:~0,8%>>%SQL_WRAPPER%
@echo %_LINE%>>%SQL_WRAPPER%
@echo whenever sqlerror exit sql.sqlcode rollback>>%SQL_WRAPPER%
@echo whenever oserror exit failure>>%SQL_WRAPPER%
if %ERRORLEVEL% GTR 0 set "_RC=%ERRORLEVEL%" && goto:_error "create wrapper script"

:: adding installAPEX files
for /f "tokens=1* delims==" %%a in ('type %APP_LOG%') do (
    set APP=%%a
    set APP_ID=%%a
    set IS_WC=!APP:~0,2!
    if ["!IS_WC!"] == ["WC"] set APP_ID=!APP:~2!
    @echo %DATE% %TIME:~0,8% adding %SCR_PATH%\installApex_!APP_ID!.sql to %SQL_WRAPPER_SQL%
    @echo.>>%SQL_WRAPPER%
    @echo %_LINE%>>%SQL_WRAPPER%
    @echo PROMPT>>%SQL_WRAPPER%
    @echo PROMPT Running: installApex_!APP_ID!.sql>>%SQL_WRAPPER%
    @echo @@%SCR_PATH%\installApex_!APP_ID!.sql>>%SQL_WRAPPER%
    )
if %ERRORLEVEL% GTR 0 set "_RC=%ERRORLEVEL%" && goto:_error "adding installAPEX files"

:: adding static workspace files
@echo %DATE% %TIME:~0,8% adding .\WWS\APEX\SCRIPTS\%SWS_FILES% to %SQL_WRAPPER_SQL%
@echo.>>%SQL_WRAPPER%
@echo PROMPT>>%SQL_WRAPPER%
@echo PROMPT Running: %SWS_FILES%>>%SQL_WRAPPER%
@echo @@%SCR_PATH%\%SWS_FILES%>>%SQL_WRAPPER%

@echo.>>%SQL_WRAPPER%
@echo %_LINE%>>%SQL_WRAPPER%
@echo PROMPT Done...>>%SQL_WRAPPER%
@echo PROMPT>>%SQL_WRAPPER%
@echo.>>%SQL_WRAPPER%
:: closing wrapper
@echo exit sql.sqlcode>>%SQL_WRAPPER%
if %ERRORLEVEL% GTR 0 set "_RC=%ERRORLEVEL%" && goto:_error "adding static workspace files"
goto:_end



:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:: error handling
:_error
@echo *** An Error has occured at step: %1% [%_RC%]! ***
goto:_end

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:: close run
:_end
@echo. && @echo %DATE% %TIME:~0,8% [%ERRORLEVEL%] Done...
:: move back to previous directory
popd

ENDLOCAL

exit %_RC%

-------------------------------------------------------------------------------- 
-- installApexStaticWorkspaceFiles.sql

whenever sqlerror exit sql.sqlcode rollback
whenever oserror exit failure

set serveroutput on size unlimited
set pages 0
set line 1000
set trimspool on
set define on
set feedback off verify off echo off

-- app_id
define app_id=19100357841544529;

-- app alias (usually only needs to be updated for working copies -> prefix app_id with main_app_id)
define app_alias='&app_id.'
--define app_alias='12000&app_id.'

-- Logfile
spool .\LOG\load_apex_files_&app_id..log

-- Environment (for Output Header)
@@_installApex_WWS_Environment.sql &app_id.

PROMPT ================================================================================
PROMPT Loading Static Workspace Files for: &app_id.
PROMPT

alter session set current_schema = &apex_app_schema.;

-- install Static Workspace Files for ID: &app_id.
BEGIN
    apex_application_install.set_workspace_id (&workspace_id.);
    apex_util.set_workspace('&workspace.');
END;
/

-- load ApexStaticWorkspaceFiles
@..\COMPLETE_EXPORTS\files_&app_id..sql;

PROMPT
PROMPT Load of Static Workspace Files for ID: &app_id. done [0]
PROMPT ================================================================================
PROMPT

spool off
set serveroutput off


-------------------------------------------------------------------------------- 
-- makeCommonLogfile.cmd

@echo off
set "_MAIN_DIR=C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS"
set "_LOGD=%_MAIN_DIR%\LOG"
set "_LOGF=%_MAIN_DIR%\TMP\_loadAPEX_ENTW.log"
:: check if file arg was passed
if ["%1".] == ["".] (
    set _FILE=*.log
) else (
    set _FILE=%1
)
pushd %_LOGD%
@echo adding File: %_FILE% to %_LOGF%

@echo.>>%_LOGF%
@echo ================================================================================>>%_LOGF%
@echo Logdate: %DATE% %TIME:~0,8%>>%_LOGF% (substract from current date to get runtime)
for /f "tokens=*" %%f in ('dir /b /s %_LOGD%\%_FILE%') do (
    @echo.>>%_LOGF%
    @echo %%f>>%_LOGF%
    @REM @echo.>>%_LOGF%
    type %%f>>%_LOGF%
    )
popd

-------------------------------------------------------------------------------- 
-- makeInstallFiles.cmd

@echo off

setlocal enabledelayedexpansion
rem delayed variable expansion, allowing variables to be expanded at execution time.

set "inputFile=%1"
set "outputFile=%2"
set "search=#APP_ID#"
set "search2=#OFFSET#"

:: check if Working Copy
set "APP=%3"
set IS_WC=%APP:~0,2%
if ["%IS_WC%"] == ["WC"] (
    set APP_ID=%APP:~2%
    @REM echo "!APP_ID! is a working copy - generate offset"
    set "replace=!APP_ID!"
    set "replace2=generate_offset"
    set outputFile=%outputFile:#APP#=!APP_ID!%
    ) else (
        set APP_ID=%APP%
        @REM echo "!APP_ID! is a not a working copy - set_offset(0)"
        set "replace=!APP_ID!"
        set "replace2=set_offset(0)"
        set outputFile=%outputFile:#APP#=!APP_ID!%
    )

:: check parameters
if "[%3]"=="[]" (
   call :_usage %~n0
   endlocal
   exit /b
   )

@REM echo "%inputFile%" "%outputFile%" "%search%=%replace%" "%search2%=%replace2%"

(for /f "tokens=*" %%a in ('type "%inputFile%" ^| findstr /n "^"') do (
    set "line=%%a"
    set "line=!line:*:=!"

    if defined line (
        set "line=!line:%search%=%replace%!"
        set "line=!line:%search2%=%replace2%!"
        echo(!line!
    ) else echo.
)) > "%outputFile%"

endlocal
goto:eof

@REM ---------------------------------------------------------------------
@REM Usage
:_usage
   @echo.
   @echo Usage: %1% [inputFile] [outputFile] [appID]
   goto:eof

:eof
rem end local scope to clean up environment variable.

-------------------------------------------------------------------------------- 
-- _installAPEX_ENTW.cmd

@echo off

:: Main Directory
set "PWD=..SCRPIS\CMD\"
set "MAIN_PATH=C:\GIT\APEX\ENTW\WWS\APEX"

:: Sript Path
set "SCR_PATH=%MAIN_PATH%\SCRIPTS"
set "CMD_DIR=%SCR_PATH%\CMD"

pushd %SCR_PATH%

:: cleaning previous install files
@echo.
@echo ================================================================================
@echo %DATE% %TIME:~0,8% *** Running createInstallAPEX_ENTW.cmd ***
@echo ================================================================================

cmd /k %CMD_DIR%\createInstallAPEX_ENTW.cmd

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:: close run
@echo.
@echo ================================================================================
@echo.

:: move back to previous directory
popd


-------------------------------------------------------------------------------- 
-- _installApex_WWS_#APP_ID#.sql

whenever sqlerror exit sql.sqlcode rollback
whenever oserror exit failure

set serveroutput on size unlimited
set pages 0
set line 1000
set trimspool on
set define on
set feedback off verify off echo off

-- app_id
define app_id=#APP_ID#;

-- app alias (usually only needs to be updated for working copies -> prefix app_id with main_app_id)
define app_alias='&app_id.'
--define app_alias='12000&app_id.'

-- returncode
var RC number;
exec :RC := 0;

column rc new_value rc noprint

set termout off
select to_char(:RC) as rc from dual;
set termout on

-- Logfile
spool .\LOG\load_apex_f&app_id..log

-- Environment (for Output Header)
@@_installApex_WWS_Environment.sql &app_id.

PROMPT ================================================================================
PROMPT
PROMPT Loading Application &app_id.
PROMPT

alter session set current_schema = &apex_app_schema.;

-- install app &app_id.
BEGIN
    apex_application_install.set_workspace_id (&workspace_id.);
    apex_util.set_workspace('&workspace.');
    apex_application_install.set_application_id(&app_id.);
    apex_application_install.#OFFSET#;
    apex_application_install.set_application_alias ('F&app_alias.');
END;
/

-- load application from export
@..\COMPLETE_EXPORTS\f&app_id..sql;

PROMPT
PROMPT Load of Application &app_id. completed with: [&rc.]
PROMPT ================================================================================
PROMPT Refreshing Translations for Application &app_id.

set feedback off verify off echo off
-- need to reset session variables to make translation refresh work,
-- else you get: ORA-06502: PL/SQL: numeric or value error
EXEC DBMS_SESSION.RESET_PACKAGE;

set serveroutput on size unlimited

DECLARE
l_cnt pls_integer := 0;
BEGIN

    for l in (select translated_app_language as lang,
                     primary_application_id as app_id,
                     workspace
                from "APEX_APPLICATION_TRANS_MAP"
               where workspace = '&workspace.'
                 and primary_application_id = &app_id.) loop

        l_cnt := l_cnt + 1;

        apex_util.set_workspace(l.workspace);

        -- Seed the translateable texts into translated application
        apex_lang.seed_translations (p_application_id             => l.app_id
                                    ,p_language                   => l.lang
                                    );

        -- Now, publish the translated version of the application
        apex_lang.publish_application (p_application_id           => l.app_id
                                      ,p_language                 => l.lang
                                      );

    end loop;

    if l_cnt > 0 then
      commit;
      :RC := SQLCODE;
    else
      dbms_output.put_line(chr(10)||'***** No translation for Application: '||&app_id.||' found. *****');
      :RC := 1;
    end if;

exception when others then rollback; raise;
END;
/

set termout off
select to_char(:RC) as rc from dual;
set termout on

PROMPT Refreshing Translations for Application &app_id. completed with: [&rc.]
PROMPT ================================================================================
PROMPT

spool off
set serveroutput off

-- Log Run
host .\CMD\makeCommonLogfile.cmd load_apex_f&app_id..log


-------------------------------------------------------------------------------- 
-- _installApex_WWS_ENTW.sql

--------------------------------------------------------------------------------
-- Apex Load Applications for ENTW from GIT Export
-- generated by: SOB01 on: 06.03.2024 10:11:51
--------------------------------------------------------------------------------
whenever sqlerror exit sql.sqlcode rollback
whenever oserror exit failure

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_1000.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_1000.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_1100.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_1100.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_1200.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_1200.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_1300.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_1300.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_1400.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_1400.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_1500.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_1500.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_2000.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_2000.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_12000.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_12000.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_12100.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_12100.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_100000.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_100000.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_121100.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_121100.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_130000.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_130000.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_130100.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_130100.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_140000.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_140000.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_140100.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_140100.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_140200.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_140200.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_140300.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_140300.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_140400.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_140400.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_140500.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_140500.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_100.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_100.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_104.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_104.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_106.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_106.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_108.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_108.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_110.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_110.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_111.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_111.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_113.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_113.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_115.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_115.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_117.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_117.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_119.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_119.sql

--------------------------------------------------------------------------------
PROMPT
PROMPT Running: installApex_120.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApex_120.sql

PROMPT
PROMPT Running: installApexStaticWorkspaceFiles.sql
@@C:\GIT\APEX\ENTW\WWS\APEX\SCRIPTS\installApexStaticWorkspaceFiles.sql

--------------------------------------------------------------------------------
PROMPT Done...
PROMPT

exit sql.sqlcode


-------------------------------------------------------------------------------- 
-- _installApex_WWS_Environment.sql

define app_id = &1.
PROMPT
PROMPT ================================ Environment ===================================
column current_date NEW_VALUE current_date NOPRINT
column host_name NEW_VALUE host_name NOPRINT
column apex_app_schema NEW_VALUE apex_app_schema NOPRINT
column apex_version NEW_VALUE apex_version NOPRINT
column apex_schema NEW_VALUE apex_schema NOPRINT
column apex_app_id NEW_VALUE apex_app_id NOPRINT
column apex_release_date NEW_VALUE apex_release_date NOPRINT
column workspace NEW_VALUE workspace NOPRINT
column workspace_id NEW_VALUE workspace_id NOPRINT
column db_name NEW_VALUE db_name NOPRINT
column session_user NEW_VALUE session_user NOPRINT
column session_schema NEW_VALUE session_schema NOPRINT
column lang NEW_VALUE lang NOPRINT
column nls_territory NEW_VALUE nls_territory NOPRINT
set numformat 99999999999999990

set termout off

select to_char(SYSDATE, 'DD.MM.YYYY HH24:MI:SS') as current_date, to_char(&app_id.) as apex_app_id,
       upper(i.host_name)||'.DEICHMANN.COM' as HOST_NAME, s.schema as apex_app_schema,
       (select max(owner) as owner from all_views where view_name = 'APEX_APPLICATIONS') as apex_schema,
       ar.version_no as apex_version, ar.api_compatibility as apex_release_date, w.workspace_id, w.workspace,
       i.instance_name as db_name, sys_context('USERENV','LANGUAGE') as lang,
       sys_context('USERENV','NLS_TERRITORY') as nls_territory,
       sys_context('USERENV','SESSION_USER') as session_user
from apex_workspace_schemas s, v$instance i, apex_workspaces w, v$database d, apex_release ar
where w.workspace = 'APEX_WWS'
and s.schema = w.workspace
and s.workspace_name = w.workspace;

set termout on

PROMPT Current Date:                       &current_date.
PROMPT Hostname:                           &host_name.
PROMPT Instance:                           &db_name.
PROMPT Workspace:                          &workspace. (ID:&workspace_id.)
PROMPT Apex Schema:                        &apex_schema.
PROMPT Apex Release:                       &apex_version. (&apex_release_date.)
PROMPT Apex App Schema:                    &apex_app_schema.
PROMPT Apex Application (to be imported):  &apex_app_id.
PROMPT


-------------------------------------------------------------------------------- 
-- _installApex_WWS_GenerateAppList.sql

--------------------------------------------------------------------------------
-- Get Apex Applications for environment (ENTW) from GIT Export
--
-- Arguments:
-- 1.) usr -> DB User that runs this script (default: APEX_WWS)
-- 2.) env -> valid connection string to database to be queried (default: ENTW)
--
-- History:
-- SOB01 - created 01.03.2024
--
--------------------------------------------------------------------------------
whenever sqlerror exit sql.sqlcode rollback
whenever oserror exit failure
set define on
define usr='&1.';
define env='&2.';
PROMPT
ACCEPT pwd CHAR PROMPT 'Please enter the password for user &usr. at &env.: ' HIDE
connect &usr./&pwd.@//&env.

column current_date NEW_VALUE current_date NOPRINT
column host_name NEW_VALUE host_name NOPRINT
column apex_app_schema NEW_VALUE apex_app_schema NOPRINT
column apex_version NEW_VALUE apex_version NOPRINT
column apex_schema NEW_VALUE apex_schema NOPRINT
column apex_app_id NEW_VALUE apex_app_id NOPRINT
column apex_release_date NEW_VALUE apex_release_date NOPRINT
column workspace NEW_VALUE workspace NOPRINT
column workspace_id NEW_VALUE workspace_id NOPRINT
column db_name NEW_VALUE db_name NOPRINT
column session_user NEW_VALUE session_user NOPRINT
column session_schema NEW_VALUE session_schema NOPRINT
column lang NEW_VALUE lang NOPRINT
column nls_territory NEW_VALUE nls_territory NOPRINT
set numformat 99999999999999990
set verify off
set termout off

select to_char(SYSDATE, 'DD.MM.YYYY HH24:MI:SS') as current_date,
       upper(i.host_name)||'.DEICHMANN.COM' as HOST_NAME, s.schema as apex_app_schema,
       (select max(owner) as owner from all_views where view_name = 'APEX_APPLICATIONS') as apex_schema,
       ar.version_no as apex_version, ar.api_compatibility as apex_release_date, w.workspace_id, w.workspace,
       i.instance_name as db_name, sys_context('USERENV','LANGUAGE') as lang,
       sys_context('USERENV','NLS_TERRITORY') as nls_territory,
       sys_context('USERENV','SESSION_USER') as session_user
from apex_workspace_schemas s, v$instance i, apex_workspaces w, v$database d, apex_release ar
where w.workspace = 'APEX_WWS'
and s.schema = w.workspace
and s.workspace_name = w.workspace;

set termout on
PROMPT
PROMPT ====================== Application List for &db_name. ==========================
PROMPT
PROMPT Current Date:                       &current_date.
PROMPT Hostname:                           &host_name.
PROMPT Instance:                           &db_name.
PROMPT Workspace:                          &workspace. (ID:&workspace_id.)
PROMPT Apex Schema:                        &apex_schema.
PROMPT Apex Release:                       &apex_version. (&apex_release_date.)
PROMPT Apex App Schema:                    &apex_app_schema.
PROMPT

set trimspool on
set pages 0
set line 100
set echo off feedback off verify off

PROMPT &current_date. *** Getting Application IDs for Workspace: &workspace. ***

set termout off

spool .\TMP\&db_name._Apex_App_Export.log

-- Main Apps first
select case when (IS_WORKING_COPY = 'Yes' or (length(alias) -1 != length(application_id)
                                              and alias != replace(replace(APPLICATION_NAME,'_', '-'), ' ', '-')))
            then 'WC' end||to_char(application_id) from apex_applications
where workspace = '&workspace.' and application_id >= 1000 order by application_id;
-- Working Copies and others like manually imported apps from current main apps
select case when (IS_WORKING_COPY = 'Yes' or (length(alias) -1 != length(application_id)
                                              and alias != replace(replace(APPLICATION_NAME,'_', '-'), ' ', '-')))
            then 'WC' end||to_char(application_id) from apex_applications
where workspace = '&workspace.' and application_id < 1000 order by application_id;

spool off

set termout on

exit sql.sqlcode

